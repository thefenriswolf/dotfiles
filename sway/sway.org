#+title: sway config
#+author: Stefan Rohrbacher
#+date: 2023
#+auto_tangle: t
#+property: header-args :tangle config

* Stefan's Sway WM config
:PROPERTIES:
:TOC:      :include all :ignore (this)
:END:
:CONTENTS:
- [[#required-programs][Required Programs]]
- [[#variables][Variables]]
  - [[#xwayland-support][xwayland support]]
  - [[#font][Font]]
  - [[#gaps][Gaps]]
  - [[#titlebar][Titlebar]]
  - [[#modifier-key][Modifier Key]]
  - [[#movement][Movement]]
  - [[#terminal][Terminal]]
  - [[#launcher][Launcher]]
- [[#autostarts][Autostarts]]
  - [[#blueman-bluetooth-manager][blueman bluetooth manager]]
  - [[#dunst-notification-daemon][dunst notification daemon]]
- [[#output][Output]]
- [[#idle][Idle]]
- [[#input][Input]]
- [[#keybindings][Keybindings]]
  - [[#terminal][Terminal]]
  - [[#launcher][launcher]]
  - [[#sway-modifiers][sway modifiers]]
    - [[#config-reload][config reload]]
    - [[#exit-sway][exit sway]]
  - [[#brightness][brightness]]
  - [[#volume][volume]]
  - [[#screenshot][screenshot]]
  - [[#window-modifiers][window modifiers]]
    - [[#kill-window][kill window]]
    - [[#floating-windows][floating windows]]
    - [[#focus][focus]]
    - [[#fullscreen][fullscreen]]
    - [[#movement][movement]]
  - [[#workspace-modifiers][workspace modifiers]]
    - [[#focus][focus]]
    - [[#movement][movement]]
    - [[#split][split]]
    - [[#layout][layout]]
    - [[#resizing][resizing]]
- [[#scratchpad][Scratchpad]]
- [[#status-bar][Status Bar]]
- [[#includes][Includes]]
:END:

* Required Programs
- sway
- alacritty: terminal
- swaybg: background manager
- swayimg: image viewer
- swaylock: lockscreen
- waybar: menu bar
- brightnessctl: screen brightness management
- pactl: volume management
- blueman: bluetooth manager
- dunst: notification daemon
- rofi: app launcher
- wl-clipboard: clipboard manager
- grim: screenshots
  - slurp: selection helper for grim
  - grimshot: make grim useful

* Variables
** xwayland support
#+begin_src config
xwayland enable
#+end_src

** Font
#+begin_src config
font pango: Fira Code Mono 12
#+end_src

** Gaps
#+begin_src config
gaps inner 1
gaps outer 2
smart_gaps on
#+end_src

** Titlebar
Hide title bar.
#+begin_src config
default_border none
#+end_src

** Modifier Key
Leader key.
- Mod1: Alt
- Mod4: Super
#+begin_src config
set $mod Mod4
#+end_src

** Movement
#+begin_src config
set $left h
set $down j
set $up k
set $right l
#+end_src

** Terminal
#+begin_src config
set $term alacritty
#+end_src

** lockscreen
#+begin_src config
set $lockscreen swaylock --color 000000 --ignore-empty-password --daemonize --show-keyboard-layout --show-failed-attempts
#+end_src

** Launcher
#+begin_src config
set $menu rofi -show drun
#+end_src

** window switcher
#+begin_src config
set $ws rofi -show window
#+end_src

* Autostarts
** blueman bluetooth manager
#+begin_src config
exec blueman-applet
#+end_src

** dunst notification daemon
#+begin_src config
exec dunst -lto 10 -nto 20 -cto 100 -show_age_theshold 11 -startup_notification -idle_threshold 60
#+end_src

* Output
#+begin_src config
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/ubuntu2_by_arman1992.jpg fill

output XWAYLAND0 resolution 1920x1080 position 0,0

# You can get the names of your outputs by running: swaymsg -t get_outputs
#+end_src

* Idle
This will lock your screen after 300 seconds of inactivity, then turn off your displays after another 300 seconds, and turn your screens back on when resumed. It will also lock your screen before your computer goes to sleep.
#+begin_src config
exec swayidle -w \
          timeout 300 'swaylock -e -f -F -k -c 000000' \
          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
          before-sleep 'swaylock -e -f -F -k -c 000000'
#+end_src

* Lockscreen
#+begin_src config
bindsym $mod+Alt+l exec $lockscreen
#+end_src

* Input
You can get the names of your inputs by running: swaymsg -t get_inputs
Read `man 5 sway-input` for more information about this section.
#+begin_src config
input * {
    xkb_model "pc105"
    xkb_layout "at"
    xkb_variant "nodeadkeys"
}

input type:touchpad {
    dwt enabled
    tap enabled
    natural_scroll disabled
}
#+end_src

* Keybindings
** Terminal
#+begin_src config
bindsym $mod+Return exec $term
#+end_src

** notifications
#+begin_src config
bindsym $mod+Backspace exec dunstctl close-all
#+end_src

** launcher
#+begin_src config
bindsym $mod+d exec $menu
#+end_src

** window switcher
#+begin_src config
bindsym $mod+Shift+d exec $ws
#+end_src

** sway modifiers

*** config reload
#+begin_src config
bindsym $mod+Shift+c reload
#+end_src

*** exit sway
#+begin_src config
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#+end_src

** brightness
#+begin_src config
bindsym XF86MonBrightnessUp exec brightnessctl --device=amdgpu_bl0 set +5%
bindsym XF86MonBrightnessDown exec brightnessctl --device=amdgpu_bl0 set 5%-
#+end_src

** volume
#+begin_src config
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
#+end_src

** screenshot
=Super+Shift+s= takes a screenshot and saves it in the Pictures folder.
=Super+Alt+s= takes a screenshot and puts it in the clipboard.
#+begin_src config
bindsym $mod+Shift+s exec grimshot --notify save screen

bindsym $mod+Alt+s exec grimshot --notify save area
#+end_src

** window modifiers
*** kill window
Kill focused window.
#+begin_src config
bindsym $mod+Shift+q kill
#+end_src

*** floating windows
Drag floating windows by holding down $mod and left mouse button.
Resize them with right mouse button + $mod.
Despite the name, also works for non-floating windows.
Change normal to inverse to use left mouse button for resizing and right mouse button for dragging.
#+begin_src config
floating_modifier $mod normal
# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle
#+end_src

*** focus
Change window focus.
#+begin_src config
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move focus to the parent container
bindsym $mod+a focus parent
#+end_src

*** fullscreen
#+begin_src config
bindsym $mod+f fullscreen
#+end_src

*** movement
Move focused window around.
#+begin_src config
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#+end_src

** workspace modifiers
*** focus
Visit workspace [1:10].
#+begin_src config
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
#+end_src

*** movement
#+begin_src config
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
#+end_src

*** split
#+begin_src config
bindsym $mod+b splith
bindsym $mod+v splitv
#+end_src

*** layout
#+begin_src config
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
#+end_src

*** resizing
#+begin_src config
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#+end_src

* Scratchpad
#+begin_src config
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.
# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#+end_src

* Status Bar
** waybar
Nothing to be configured here. See =~/.config/waybar/config=
#+begin_src config
bar {
    swaybar_command waybar
}
#+end_src

** swaybar
#+begin_src config
#bar {
#     position top
#     status_command $(xdg-user-dir)/.config/sway/status.sh
#
#colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}
#+end_src
* Includes
#+begin_src config
include /etc/sway/config.d/*
include /etc/sway/config-vars.d/*
#+end_src
